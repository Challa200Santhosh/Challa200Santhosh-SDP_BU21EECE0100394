C51 COMPILER V9.60.7.0   VOLTAGE                                                           06/21/2024 12:57:55 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE VOLTAGE
OBJECT MODULE PLACED IN .\Objects\Voltage.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Voltage.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\V
                    -oltage.lst) TABS(2) OBJECT(.\Objects\Voltage.obj)

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          
   4          // LCD Control Pins
   5          sbit RS = P3^0;
   6          sbit RW = P3^1;
   7          sbit EN = P3^2;
   8          
   9          // ADC Control Pins
  10          sbit ALE = P3^3;
  11          sbit OE = P3^4;
  12          sbit START = P3^5;
  13          sbit EOC = P3^6;
  14          
  15          void delay(unsigned int time);
  16          void lcd_init(void);
  17          void lcd_command(unsigned char command);
  18          void lcd_data(unsigned char Data);
  19          void lcd_display_string(char *str);
  20          void lcd_display_voltage(float voltage);
  21          unsigned char adc_read(void);
  22          
  23          // Lookup table for voltage values stored in code memory
  24          float code adc_to_voltage[256] = {
  25              0.0000, 0.0980, 0.1961, 0.2941, 0.3922, 0.4902, 0.5882, 0.6863, 0.7843, 0.8824,
  26              0.9804, 1.0784, 1.1765, 1.2745, 1.3725, 1.4706, 1.5686, 1.6667, 1.7647, 1.8627,
  27              1.9608, 2.0588, 2.1569, 2.2549, 2.3529, 2.4510, 2.5490, 2.6471, 2.7451, 2.8431,
  28              2.9412, 3.0392, 3.1373, 3.2353, 3.3333, 3.4314, 3.5294, 3.6275, 3.7255, 3.8235,
  29              3.9216, 4.0196, 4.1176, 4.2157, 4.3137, 4.4118, 4.5098, 4.6078, 4.7059, 4.8039,
  30              4.9020, 5.0000, 5.0980, 5.1961, 5.2941, 5.3922, 5.4902, 5.5882, 5.6863, 5.7843,
  31              5.8824, 5.9804, 6.0784, 6.1765, 6.2745, 6.3725, 6.4706, 6.5686, 6.6667, 6.7647,
  32              6.8627, 6.9608, 7.0588, 7.1569, 7.2549, 7.3529, 7.4510, 7.5490, 7.6471, 7.7451,
  33              7.8431, 7.9412, 8.0392, 8.1373, 8.2353, 8.3333, 8.4314, 8.5294, 8.6275, 8.7255,
  34              8.8235, 8.9216, 9.0196, 9.1176, 9.2157, 9.3137, 9.4118, 9.5098, 9.6078, 9.7059,
  35              9.8039, 9.9020, 10.0000, 10.0980, 10.1961, 10.2941, 10.3922, 10.4902, 10.5882,
  36              10.6863, 10.7843, 10.8824, 10.9804, 11.0784, 11.1765, 11.2745, 11.3725, 11.4706,
  37              11.5686, 11.6667, 11.7647, 11.8627, 11.9608, 12.0588, 12.1569, 12.2549, 12.3529,
  38              12.4510, 12.5490, 12.6471, 12.7451, 12.8431, 12.9412, 13.0392, 13.1373, 13.2353,
  39              13.3333, 13.4314, 13.5294, 13.6275, 13.7255, 13.8235, 13.9216, 14.0196, 14.1176,
  40              14.2157, 14.3137, 14.4118, 14.5098, 14.6078, 14.7059, 14.8039, 14.9020, 15.0000,
  41              15.0980, 15.1961, 15.2941, 15.3922, 15.4902, 15.5882, 15.6863, 15.7843, 15.8824,
  42              15.9804, 16.0784, 16.1765, 16.2745, 16.3725, 16.4706, 16.5686, 16.6667, 16.7647,
  43              16.8627, 16.9608, 17.0588, 17.1569, 17.2549, 17.3529, 17.4510, 17.5490, 17.6471,
  44              17.7451, 17.8431, 17.9412, 18.0392, 18.1373, 18.2353, 18.3333, 18.4314, 18.5294,
  45              18.6275, 18.7255, 18.8235, 18.9216, 19.0196, 19.1176, 19.2157, 19.3137, 19.4118,
  46              19.5098, 19.6078, 19.7059, 19.8039, 19.9020, 20.0000, 20.0980, 20.1961, 20.2941,
  47              20.3922, 20.4902, 20.5882, 20.6863, 20.7843, 20.8824, 20.9804, 21.0784, 21.1765,
  48              21.2745, 21.3725, 21.4706, 21.5686, 21.6667, 21.7647, 21.8627, 21.9608, 22.0588,
  49              22.1569, 22.2549, 22.3529, 22.4510, 22.5490, 22.6471, 22.7451, 22.8431, 22.9412,
  50              23.0392, 23.1373, 23.2353, 23.3333, 23.4314, 23.5294, 23.6275, 23.7255, 23.8235,
  51              23.9216, 24.0196, 24.1176, 24.2157, 24.3137, 24.4118, 24.5098, 24.6078, 24.7059,
  52              24.8039, 24.9020, 25.0000
  53          };
  54          
C51 COMPILER V9.60.7.0   VOLTAGE                                                           06/21/2024 12:57:55 PAGE 2   

  55          void main(void) {
  56   1          unsigned char adc_value;
  57   1          float voltage;
  58   1          
  59   1          lcd_init();  // Initialize the LCD
  60   1          lcd_display_string("Voltage: ");
  61   1          
  62   1          while(1) {
  63   2              adc_value = adc_read();  // Read ADC value
  64   2              voltage = adc_to_voltage[adc_value];  // Get voltage from lookup table
  65   2      
  66   2              lcd_command(0xC0);  // Move cursor to the second line of LCD
  67   2              lcd_display_voltage(voltage);  // Display the voltage on LCD
  68   2          }
  69   1      }
  70          
  71          // Function to initialize the LCD
  72          void lcd_init(void) {
  73   1          lcd_command(0x38);  // Initialize LCD in 8-Bit mode
  74   1          delay(1);
  75   1          lcd_command(0x0C);  // Display ON, Cursor OFF
  76   1          delay(1);
  77   1          lcd_command(0x06);  // Auto increment cursor
  78   1          delay(1);
  79   1          lcd_command(0x01);  // Clear display
  80   1          delay(1);
  81   1          lcd_command(0x80);  // Move cursor to the first line
  82   1          delay(1);
  83   1      }
  84          
  85          // Function to send command to LCD
  86          void lcd_command(unsigned char command) {
  87   1          P2 = command;
  88   1          RS = 0;  // Select command Register
  89   1          RW = 0;  // Write operation
  90   1          EN = 1;
  91   1          delay(1);
  92   1          EN = 0;
  93   1          delay(1);
  94   1      }
  95          
  96          // Function to send data to LCD
  97          void lcd_data(unsigned char Data) {
  98   1          P2 = Data;
  99   1          RS = 1;  // Select Data Register
 100   1          RW = 0;  // Write operation
 101   1          EN = 1;
 102   1          delay(1);
 103   1          EN = 0;
 104   1          delay(1);
 105   1      }
 106          
 107          // Function to display string on LCD
 108          void lcd_display_string(char *str) {
 109   1          while (*str) {
 110   2              lcd_data(*str++);
 111   2          }
 112   1      }
 113          
 114          // Function to display voltage on LCD
 115          void lcd_display_voltage(float voltage) {
 116   1          char buffer[16];
C51 COMPILER V9.60.7.0   VOLTAGE                                                           06/21/2024 12:57:55 PAGE 3   

 117   1          sprintf(buffer, "%1.4fV", voltage);  // Format voltage with 4 decimal places
 118   1          lcd_display_string(buffer);
 119   1      }
 120          
 121          // Function to read Data from ADC
 122          unsigned char adc_read(void) {
 123   1          unsigned char adc_value;
 124   1      
 125   1          ALE = 1;
 126   1          START = 1;
 127   1          delay(1);
 128   1          ALE = 0;
 129   1          START = 0;
 130   1      
 131   1          while (EOC == 1);  // Wait for end of conversion
 132   1      
 133   1          OE = 1;
 134   1          adc_value = P1;  // Read ADC value from Port 1
 135   1          OE = 0;
 136   1      
 137   1          return adc_value;
 138   1      }
 139          
 140          // Function to generate delay
 141          void delay(unsigned int time) {
 142   1          unsigned int i, j;
 143   1          for(i = 0; i < time; i++) {
 144   2              for(j = 0; j < 1275; j++);
 145   2          }
 146   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    270    ----
   CONSTANT SIZE    =   1041    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
